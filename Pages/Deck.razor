@page "/Deck"

@using Srs.Data
@using System.Linq;
@inject Srs.Service Service;

<div class="container">
	<div class="row justify-content-center">

		@if (reviewDeck == null) Initialize();

		<!-- Review -->
		<div class="col mr-3" align="center">
			<span class="text-header">Review</span>

			<!-- Front -->
			<div class="row">
				<textarea class="form-control text-center mt-2" maxlength="0" rows="3" @bind="reviewFront" readonly></textarea>
			</div>

			<!-- Back -->
			<div class="row">
				<textarea class="form-control text-center mt-2" maxlength="50" rows="3" placeholder="Type" @bind="reviewBack" @onkeydown="@ReviewEnter"></textarea>
			</div>

			@if (reviewStart) {
				<!-- Enter -->
				<div class="row justify-content-center">
					<button class="btn btn-nav-big" type="button" @onclick="(() => ReviewEnter())">
                    	<span>Enter</span>
                	</button>
				</div>
			}
		</div>

		<!-- Options -->
		<div class="col ml-3" align="center">
			<span class="text-header">Options</span>

			<!-- Locked -->
			@if (!reviewStart) {
				<!-- Review slider -->
				<div class="row mt-2">
					<div class="input-group input-group-sm justify-content-center">
						<span class="text-subheader">Number of cards to review : @reviewNumber</span>
						<input type="range" class="form-range" min="10" max="50" step="5" @bind="reviewNumber">
					</div>
				</div>

				<!-- Card slider -->
				<div class="row mt-2">
					<div class="input-group input-group-sm justify-content-center">
						<span class="text-subheader">Percentage of new cards : @reviewNewPresentage %</span>
						<input type="range" class="form-range" min="0" max="100" step="10" @bind="reviewNewPresentage">
					</div>
				</div>

				<!-- Typos -->
				<div class="row mt-2" align="center">
					<div class="container">
 						<input class="form-check-input" type="checkbox" id="allowTypos" @bind="reviewTypos">
						<span class="text-subheader" for="allowTypos">Allow small typos</span>
					</div>
				</div>
			}
			else {
				<!-- Review slider -->
				<div class="row mt-2">
					<div class="input-group input-group-sm justify-content-center">
						<span class="text-subheader">Number of cards to review : @reviewNumber</span>
						<input type="range" class="form-range" min="10" max="50" step="5" @bind="reviewNumber" disabled>
					</div>
				</div>

				<!-- Card slider -->
				<div class="row mt-2">
					<div class="input-group input-group-sm justify-content-center">
						<span class="text-subheader">Percentage of new cards : @reviewNewPresentage %</span>
						<input type="range" class="form-range" min="0" max="100" step="10" @bind="reviewNewPresentage" disabled>
					</div>
				</div>

				<!-- Typos -->
				<div class="row mt-2" align="center">
					<div class="container">
 						<input class="form-check-input" type="checkbox" id="allowTypos" @bind="reviewTypos" disabled>
						<span class="text-subheader" for="allowTypos">Allow small typos</span>
					</div>
				</div>
			}
			
			<div class="divider mt-2"></div>

			<!-- Start -->
			<div class="row justify-content-center mt-2">
				<button class="btn btn-nav-big" type="button" @onclick="(() => StartReview())">
                    <img src="svg/Play.svg" alt="" width="20" height="20" title="Decks" class="svg-start">
                    <span>Start</span>
                </button>
			</div>
		</div>
	</div>
</div>

@code
{
	// New
	private Data.PartialDeck partialDeck;
	private float reviewAmount, reviewPercent;


	// Review
	private string reviewFront, reviewBack;
	private float reviewNumber, reviewNewPresentage;
	private bool reviewTypos, reviewStart;
	private Dictionary<int, int> reviewDeck;
	private Dictionary<int, int> oldCards;
	private Dictionary<int, int> newCards;

	private void Initialize() {
		newCards = new Dictionary<int, int>();
		oldCards = new Dictionary<int, int>();
		reviewDeck = new Dictionary<int, int>();
		partialDeck = new Data.PartialDeck();
		reviewNewPresentage = 50;
		reviewNumber = 10;
	}

	private async void CreateReviewDeck() {
		partialDeck = await Service.CreateReviewDeck(reviewAmount, reviewPercent);
		reviewFront = partialDeck.Cards.ToString();
	}

	private void StartReview() {
		reviewStart = true;
		CreateReviewDeck();
	}

	// Accept answer
    private void ReviewEnter(KeyboardEventArgs e = null) {
        if (e.Code == "Enter" || e.Code == "NumpadEnter") {
			if (e.ShiftKey == false) reviewFront = "Enter pressed";
        }
    }
}